# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end

  desc "Increment Android version name and code"
  lane :increment_version_build_numbers do
    file_path = "../app.json"
    # read app.json file
    app_json = read_json(json_path: file_path)

    # get version name
    name_array = app_json[:expo][:version].split(".").map(&:to_i)

    # increment patch version
    name_array[2] = (name_array[2] || 0) + 1
    # next_version_name = name_array.join(".") (UNCOMMENT THIS LINE AND COMMENT THE NEXT LINE WHEN CHANGING THE VERSION AS WELL)
    next_version_name = app_json[:expo][:version]

    # increase build number
    next_version_code = app_json[:expo][:android][:versionCode] + 1
    
    # update app.json file
    app_json[:expo][:version] = next_version_name
    app_json[:expo][:android][:versionCode] = next_version_code
    write_json(hash: app_json, file_path: file_path)

    # update android/app/build.gradle
    android_set_version_code(version_code: next_version_code, gradle_file: "app/build.gradle")
    android_set_version_name(version_name: next_version_name, gradle_file: "app/build.gradle")
  end

  desc "Update release channel in AndroidManifest.xml"
  lane :update_release_channel do
    file_path = "../eas.json"
    # read eas.json file
    eas_json = read_json(json_path: file_path)

    # get release channel
    release_channel = eas_json[:build][:alpha][:releaseChannel]

    # update expo.modules.updates.EXPO_RELEASE_CHANNEL in AndroidManifest.xml
    modify_meta_data(
      manifest_file: "./app/src/main/AndroidManifest.xml",
      meta_info: {
        "expo.modules.updates.EXPO_RELEASE_CHANNEL" => release_channel
      }
    )
  end
end
